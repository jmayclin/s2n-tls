
running 7 tests
test harness::tests::test_cert_paths_valid ... ok
test scanner::test::tls12_handshake ... ok
test harness::tests::session_resumption_interop ... ok
test scanner::test::known_default_tls13 ... FAILED
test scanner::test::known_20230317 ... ok
test harness::tests::test_all ... ok
test scanner::test::inspect_against_brute ... ok

failures:

---- scanner::test::known_default_tls13 stdout ----
doing this many queries: 25
"P-521", TLS13SecurityQuery { kx: ["P-521"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Err(Error { code: 335544352, name: "S2N_ERR_ECDHE_UNSUPPORTED_CURVE", message: "Unsupported EC curve was presented during an ECDHE handshake", kind: ProtocolError, source: Library, debug: "Error encountered in lib/tls/extensions/s2n_server_key_share.c:365", errno: "Success" })
"P-384", TLS13SecurityQuery { kx: ["P-384"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Ok(())
"P-256", TLS13SecurityQuery { kx: ["P-256"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Ok(())
"X25519", TLS13SecurityQuery { kx: ["X25519"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Ok(())
"X448", TLS13SecurityQuery { kx: ["X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Err(Error { code: 335544352, name: "S2N_ERR_ECDHE_UNSUPPORTED_CURVE", message: "Unsupported EC curve was presented during an ECDHE handshake", kind: ProtocolError, source: Library, debug: "Error encountered in lib/tls/extensions/s2n_server_key_share.c:365", errno: "Success" })
"TLS_AES_128_GCM_SHA256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Ok(())
"TLS_AES_256_GCM_SHA384", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_256_GCM_SHA384"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Ok(())
"TLS_CHACHA20_POLY1305_SHA256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_CHACHA20_POLY1305_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Ok(())
"TLS_AES_128_CCM_SHA256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_CCM_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Err(Error { code: 335544331, name: "S2N_ERR_CIPHER_NOT_SUPPORTED", message: "Cipher is not supported", kind: ProtocolError, source: Library, debug: "Error encountered in lib/tls/s2n_cipher_suites.c:1343", errno: "Success" })
"TLS_AES_128_CCM_8_SHA256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256", "rsa_pkcs1_sha384", "rsa_pkcs1_sha512", "ecdsa_secp256r1_sha256", "ecdsa_secp384r1_sha384", "ecdsa_secp521r1_sha512", "rsa_pss_rsae_sha256", "rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "ed25519", "ed448", "rsa_pss_pss_sha256", "rsa_pss_pss_sha384", "rsa_pss_pss_sha512", "rsa_pkcs1_sha1"] }, Err(Error { code: 335544331, name: "S2N_ERR_CIPHER_NOT_SUPPORTED", message: "Cipher is not supported", kind: ProtocolError, source: Library, debug: "Error encountered in lib/tls/s2n_cipher_suites.c:1343", errno: "Success" })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pkcs1_sha256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha256"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pkcs1_sha384", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha384"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pkcs1_sha512", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha512"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"ecdsa_secp256r1_sha256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["ecdsa_secp256r1_sha256"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"ecdsa_secp384r1_sha384", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["ecdsa_secp384r1_sha384"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"ecdsa_secp521r1_sha512", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["ecdsa_secp521r1_sha512"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
"rsa_pss_rsae_sha256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pss_rsae_sha256"] }, Ok(())
"rsa_pss_rsae_sha384", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pss_rsae_sha384"] }, Ok(())
"rsa_pss_rsae_sha512", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pss_rsae_sha512"] }, Ok(())
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"ed25519", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["ed25519"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"ed448", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["ed448"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pss_pss_sha256", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pss_pss_sha256"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pss_pss_sha384", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pss_pss_sha384"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pss_pss_sha512", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pss_pss_sha512"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
Some(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))
"rsa_pkcs1_sha1", TLS13SecurityQuery { kx: ["P-521", "P-384", "P-256", "X25519", "X448"], cipher: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256", "TLS_AES_128_CCM_SHA256", "TLS_AES_128_CCM_8_SHA256"], signature_scheme: ["rsa_pkcs1_sha1"] }, Err(Error { code: ErrorCode(1), cause: Some(Ssl(ErrorStack([Error { code: 336908658, library: "SSL routines", function: "tls12_check_peer_sigalg", reason: "wrong signature type", file: "ssl/t1_lib.c", line: 1125 }]))) })
report signatures {"rsa_pss_rsae_sha384", "rsa_pss_rsae_sha512", "rsa_pss_rsae_sha256"}
thread 'scanner::test::known_default_tls13' panicked at 'assertion failed: report.signature.contains(\"ed25519\")', src/scanner.rs:688:9
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    scanner::test::known_default_tls13

test result: FAILED. 6 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 4.09s

